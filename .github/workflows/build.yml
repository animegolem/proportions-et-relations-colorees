name: Build and Release Color Analyzer

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win
            arch: x64
          - os: macos-latest
            platform: mac
            arch: x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.20.8'
        cache: 'npm'
        cache-dependency-path: color-analyzer-electron/package-lock.json

    - name: Install dependencies
      working-directory: color-analyzer-electron
      run: npm ci

    - name: Build application
      working-directory: color-analyzer-electron
      run: npm run build:${{ matrix.platform }} -- --publish=never
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_BUILDER_SKIP_PUBLISH: true

    - name: Upload Linux artifacts
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          color-analyzer-electron/dist/*.AppImage
          color-analyzer-electron/dist/*.deb
          color-analyzer-electron/dist/*.rpm
        retention-days: 30

    - name: Upload Windows installer (NSIS)
      if: matrix.platform == 'win'
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: |
          color-analyzer-electron/dist/*Setup*.exe
          color-analyzer-electron/dist/*.msi
        if-no-files-found: ignore
        retention-days: 30

    - name: Upload Windows portable EXE
      if: matrix.platform == 'win'
      uses: actions/upload-artifact@v4
      with:
        name: windows-portable
        path: |
          color-analyzer-electron/dist/*Portable*.exe
          color-analyzer-electron/dist/*portable*.exe
          color-analyzer-electron/dist/*-portable*.exe
        if-no-files-found: ignore
        retention-days: 30

    - name: Upload macOS artifacts
      if: matrix.platform == 'mac'
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          color-analyzer-electron/dist/*.dmg
          color-analyzer-electron/dist/*.zip
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.20.8'
        cache: 'npm'
        cache-dependency-path: color-analyzer-electron/package-lock.json

    - name: Install dependencies
      working-directory: color-analyzer-electron
      run: npm ci

    - name: Test application startup
      working-directory: color-analyzer-electron
      run: |
        npm start &
        APP_PID=$!
        sleep 5
        kill $APP_PID || true
        echo "Application started successfully"
      env:
        DISPLAY: :99
        XVFB_STARTED: true
